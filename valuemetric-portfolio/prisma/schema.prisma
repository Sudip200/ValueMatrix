// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  password  String
  portfolios Portfolio[]
  accessLogs TokenAccessLog[]
}

model Portfolio {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  name      String
  holdings  Holding[]
  cash      Float
  visibility String   @default("private") // private, public, shared
  insights  String?  // Store AI-generated insights
  shared    SharedPortfolioAccess[]
}

model Holding {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  portfolioId String  @db.ObjectId
  portfolio  Portfolio @relation(fields: [portfolioId], references: [id])
  ticker     String
  quantity   Int
}

model SharedPortfolioAccess {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  portfolioId String  @db.ObjectId
  portfolio  Portfolio @relation(fields: [portfolioId], references: [id])
  token      String   @unique
  expiry     DateTime?
  viewerCount Int     @default(0)
  logs       TokenAccessLog[]
}

model TokenAccessLog {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  tokenId    String   @db.ObjectId
  token      SharedPortfolioAccess @relation(fields: [tokenId], references: [id])
  ip         String
  fingerprint String?
  userId     String?  @db.ObjectId
  user       User?    @relation(fields: [userId], references: [id])
  accessedAt DateTime @default(now())
}

model MarketData {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  ticker    String   @unique
  price     Float
  updatedAt DateTime @updatedAt
}